[
  {
    "name": "boolean"
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MDCConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "char"
  },
  {
    "name": "char[]"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAnyGetter",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAnySetter",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonCreator",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonGetter",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonPropertyOrder",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonSetter",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonTypeInfo",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonUnwrapped",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonValue",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonView",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonDeserialize",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.annotation.JsonSerialize",
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.BeanSerializer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.KotlinModule",
    "condition": {
      "typeReachable": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.KotlinModule$Builder",
    "condition": {
      "typeReachable": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    }
  },
  {
    "name": "com.fasterxml.jackson.module.kotlin.SingletonSupport",
    "condition": {
      "typeReachable": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    }
  },
  {
    "name": "com.github.benmanes.caffeine.cache.Cache",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.rabbitmq.client.Address",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.rabbitmq.client.Address[]"
  },
  {
    "name": "com.sun.mail.handlers.message_rfc822",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.mail.handlers.multipart_mixed",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.mail.handlers.text_html",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.mail.handlers.text_plain",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.mail.handlers.text_xml",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.mail.smtp.SMTPProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.mail.smtp.SMTPTransport",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.zzs.framework.autoconfigure.cache.CacheProperties",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.autoconfigure.cache.CoroutineCacheAutoConfigure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "redisCacheBuilderFactory",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.cache.CacheProperties",
          "org.springframework.data.redis.core.ReactiveStringRedisTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.ReactiveEventAutoConfigure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "connectionFactory",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.event.properties.SpringRabbitProperties"
        ]
      },
      {
        "name": "sender",
        "parameterTypes": [
          "com.rabbitmq.client.ConnectionFactory",
          "com.zzs.framework.autoconfigure.event.properties.SpringRabbitProperties"
        ]
      },
      {
        "name": "receiver",
        "parameterTypes": [
          "com.rabbitmq.client.ConnectionFactory",
          "com.zzs.framework.autoconfigure.event.properties.SpringRabbitProperties"
        ]
      },
      {
        "name": "reactiveEventPublisher",
        "parameterTypes": [
          "reactor.rabbitmq.Sender",
          "com.zzs.framework.autoconfigure.event.properties.EventProperties"
        ]
      },
      {
        "name": "reactiveTransactionalEventPublisher",
        "parameterTypes": [
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate",
          "com.zzs.framework.core.event.ReactiveEventPublisher"
        ]
      },
      {
        "name": "eventListenerManager",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.cache.CacheProperties",
          "com.zzs.framework.autoconfigure.event.properties.EventProperties",
          "reactor.rabbitmq.Sender",
          "reactor.rabbitmq.Receiver",
          "org.springframework.data.redis.core.ReactiveStringRedisTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.properties.EventIdempotentProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.properties.EventProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.properties.EventRabbitProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.properties.EventTransactionProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.properties.EventTransactionProperties$Type",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.event.properties.SpringRabbitProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.id.IdProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.id.IdProperties$Type",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.id.snowflake.RedisSnowflakeAutoConfigure",
    "fields": [
      {
        "name": "applicationName",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "idGeneratorFactory",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.id.IdProperties",
          "org.springframework.data.redis.core.StringRedisTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.id.snowflake.SnowflakeProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.id.snowflake.SnowflakeProperties$Factory",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.trace.ReactiveTraceAutoConfigure",
    "fields": [
      {
        "name": "applicationName",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "traceContextFilter",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.trace.TraceProperties",
          "com.zzs.framework.core.trace.reactive.OperatorHolder",
          "com.zzs.framework.core.trace.reactive.OperationLogStore",
          "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.trace.TraceAutoConfigure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.framework.core.id.IDGeneratorFactory"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.framework.autoconfigure.trace.TraceProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.core.ZzsCoreHints",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.framework.core.cache.coroutine.RedisCache",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.cache.serialize.JsonValueSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.cache.serialize.StringKeySerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.cache.serialize.StringValueSerializer",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.BaseEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.EventTuple",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.GeneralEvent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.ReactiveEventPublisher",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.ReactiveTransactionalEventPublisher",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.impl.MongoEventLock",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.event.impl.MongoEventTemp",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.id.IDGenerator",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.framework.core.lang.Triple",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.lang.Tuple",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.trace.OperationLog",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.trace.Operator",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.trace.TraceContext",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.trace.reactive.OperationLogStore",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.framework.core.trace.reactive.OperatorHolder",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.BasicResult",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.ListResult",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.PageResult",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.Paging",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.Result",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.Sort",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.framework.core.transmission.SortablePaging",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.IamCommonHints",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.common.constants.MenuType",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.constants.MenuType[]",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.constants.RoleType",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.constants.RoleType[]",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.constants.UserAuthStrategy",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.constants.UserAuthStrategy[]",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.platform.PlatformCreated",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.tenant.TenantCreated",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.PlatformUserFrozen",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.PlatformUserUnfreezed",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserAccountChanged",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserCreated",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserEmailChanged",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserFrozen",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserLogined",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserPasswordChanged",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserPhoneChanged",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserUnfreezed",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.event.user.UserUpdated",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.password.PasswordEncoder",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.AuthClient",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.JoinedUser",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.Menu",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.Platform",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.Role",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.SimpleMenu",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.Tenant",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.Terminal",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.common.pojo.User",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.gateway.configure.IamGatewayAutoConfigure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.gateway.filter.auth.IamAuthGatewayFilterFactory",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.gateway.filter.auth.IamAuthenticateService"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.gateway.filter.auth.IamAuthGatewayFilterFactory$Config",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.gateway.filter.auth.IamAuthenticateService",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.gateway.filter.replay.ReplayAttackGatewayFilterFactory",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.cache.CacheProperties",
          "org.springframework.data.redis.core.ReactiveStringRedisTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.gateway.filter.replay.ReplayAttackGatewayFilterFactory$Config",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.gateway.filter.trace.ForwardTraceFilter",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.launcher.IamApplication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "passwordEncoder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.launcher.configure.FilterExceptionHandler",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.launcher.configure.LauncherAutoConfigure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.data.mongodb.ReactiveMongoDatabaseFactory"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.launcher.configure.LauncherProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.launcher.configure.WebMessageConverterAutoConfigure",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.launcher.intergration.IamAuthenticateServiceImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.application.UserAuthService"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.launcher.intergration.IamUserProvider",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.application.UserService",
          "com.zzs.iam.server.domain.model.user.UserRepository"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.application.AuthClientService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.AuthClientService$$SpringProxy$f7435d12",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.AuthClientService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.LoginService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.LoginService$$SpringProxy$27a3fedc",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.LoginService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.MenuService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.MenuService$$SpringProxy$9467a066",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.MenuService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.PlatformService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.PlatformService$$SpringProxy$91cf1732",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.PlatformService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.RoleService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.RoleService$$SpringProxy$215e6c77",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.RoleService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TenantService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TenantService$$SpringProxy$ecea7723",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TenantService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TerminalService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TerminalService$$SpringProxy$eaec1101",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TerminalService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TwoStepService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.TwoStepService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserAffService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserAffService$$SpringProxy$7ff24667",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserAffService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserAuthService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserAuthService$$SpringProxy$bdfc3692",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserAuthService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserService",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserService$$SpringProxy$a0d0481a",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.application.UserService$Companion",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.configure.IamServerAutoConfigure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webClient",
        "parameterTypes": []
      },
      {
        "name": "wechatClient",
        "parameterTypes": [
          "com.zzs.iam.server.configure.IamServerProperties",
          "org.springframework.web.reactive.function.client.WebClient"
        ]
      },
      {
        "name": "smsSender",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.configure.IamServerProperties",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.configure.OperatorHolderFilter",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.configure.UpmsHints",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.domain.model.authorization.Authentication",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.authorization.token.AccessToken",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.authorization.token.AccessTokenDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.authorization.token.AccessTokenStore",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.authorization.token.RefreshTokenDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.captcha.Captcha",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "code",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.domain.model.captcha.CaptchaService",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.domain.model.captcha.CaptchaStore"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.domain.model.captcha.CaptchaStore",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.captcha.RedisCaptchaStore",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.framework.autoconfigure.cache.CacheProperties",
          "org.springframework.data.redis.core.ReactiveStringRedisTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.domain.model.captcha.RedisCaptchaStore$$SpringProxy$52728619",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.web.MenuDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.web.MenuRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.web.TerminalDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.web.TerminalRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.log.LoginLogDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.log.LoginLogRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.log.OperationLogDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.log.OperationLogRepository",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.AuthClientDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.AuthClientRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.PlatformDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.PlatformRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.PlatformUserDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.PlatformUserRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.TenantDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.TenantRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.TenantUserDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.org.TenantUserRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.role.RoleDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.role.RoleMenuRelDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.role.RoleMenuRelRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.role.RoleRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.twostep.ActionRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.twostep.TwoStepCfgRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.twostep.TwoStepConfig",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.AuthUser",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.HistPasswordDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.HistPasswordRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.OtherPlatAuthDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.OtherPlatAuthRepository",
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.UserDO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.UserProvider",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.domain.model.user.UserRepository",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.AddUserArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.AssignMenuArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.ChangeAccountArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.ChangeEmailArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.ChangePasswordArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.ChangePhoneArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.ChangeUserRoleArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.CreateAuthClientArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.CreateMenuArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.CreatePlatformArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.CreateTenantArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.CreateTerminalArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.QueryTenantArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.QueryUserArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.RegisterUserArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.RoleArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.UpdateMenuArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.UpdateTerminalArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.UpdateUserArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.args.UserIdsArgs",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.resp.MenuTree",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.resp.SimpleMenuTree",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.resp.TenantTree",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.dto.resp.UserTenantInfo",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.IamIDGenerator",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.framework.core.id.IDGeneratorFactory"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.IamOperationLogStore",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.domain.model.log.OperationLogRepository"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.IamOperationLogStore$$SpringProxy$19d6c198",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.ActionRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.ActionRepositoryImpl$$SpringProxy$2c57be63",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.AuthClientRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.AuthClientRepositoryImpl$$SpringProxy$d2773e28",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.HistPasswordRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.HistPasswordRepositoryImpl$$SpringProxy$1ebfd402",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.LoginLogRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.LoginLogRepositoryImpl$$SpringProxy$993cb4b0",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.MenuRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.MenuRepositoryImpl$$SpringProxy$24cde94",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.OperationLogRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.OperationLogRepositoryImpl$$SpringProxy$7710482",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.OtherPlatAuthRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.OtherPlatAuthRepositoryImpl$$SpringProxy$61312b46",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.PlatformRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.PlatformRepositoryImpl$$SpringProxy$15e788c8",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.PlatformUserRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.PlatformUserRepositoryImpl$$SpringProxy$dd01940b",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.RoleMenuRelRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.RoleMenuRelRepositoryImpl$$SpringProxy$6056782b",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.RoleRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.RoleRepositoryImpl$$SpringProxy$6a4c8d63",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TenantRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TenantRepositoryImpl$$SpringProxy$5afd6077",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TenantUserRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TenantUserRepositoryImpl$$SpringProxy$6ef5fc3a",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TerminalRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TerminalRepositoryImpl$$SpringProxy$8903b819",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TwoStepCfgRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.TwoStepCfgRepositoryImpl$$SpringProxy$c2eedd69",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.UserRepositoryImpl",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.infrastructure.IamIDGenerator",
          "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.repository.UserRepositoryImpl$$SpringProxy$9f7de460",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.security.SecurityContextFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.sender.EmailSender",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.sender.SmsSender",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.sender.impl.SpringEmailSender",
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "form",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.mail.javamail.JavaMailSender"
        ]
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.MockWechatProperties",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.WechatProperties",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.resp.AccessTokenResp",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.resp.Code2SessionResp",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.resp.PhoneInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.resp.PhoneNumberResp",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.infrastructure.wechat.resp.Watermark",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.event.UserEventListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.zzs.iam.server.application.UserAffService",
          "com.zzs.iam.server.application.UserAuthService",
          "com.zzs.iam.server.domain.model.org.PlatformRepository",
          "com.zzs.iam.server.domain.model.org.TenantUserRepository",
          "com.zzs.framework.core.event.coroutine.EventListenerManager"
        ]
      },
      {
        "name": "userFrozenListener",
        "parameterTypes": []
      },
      {
        "name": "userPasswordChangedListener",
        "parameterTypes": []
      },
      {
        "name": "userAccountChangedListener",
        "parameterTypes": []
      },
      {
        "name": "userPhoneChangedListener",
        "parameterTypes": []
      },
      {
        "name": "userEmailChangedListener",
        "parameterTypes": []
      },
      {
        "name": "userChangedListener",
        "parameterTypes": []
      },
      {
        "name": "userLoginedListener",
        "parameterTypes": []
      },
      {
        "name": "platformUserFrozenListener",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zzs.iam.server.port.http.AuthClientController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.LoginController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.MenuController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.PlatformController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.RoleController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.TenantController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.TerminalController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.TwoStepController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.UserAffController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.UserAuthController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.UserController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zzs.iam.server.port.http.UserSelfController",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "double"
  },
  {
    "name": "double[]"
  },
  {
    "name": "int"
  },
  {
    "name": "io.lettuce.core.AbstractRedisAsyncCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.ChannelGroupListener",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.ConnectionEventTrigger",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.RedisAsyncCommandsImpl",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.RedisClient",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.api.sync.BaseRedisCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisGeoCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisHLLCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisHashCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisKeyCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisListCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisScriptingCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisServerCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisSetCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisSortedSetCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisStreamCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisStringCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.api.sync.RedisTransactionalCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.cluster.api.sync.RedisClusterCommands",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.protocol.CommandHandler",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.protocol.ConnectionWatchdog",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.lettuce.core.resource.ClientResources",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allPublicMethods": true
  },
  {
    "name": "io.lettuce.core.resource.DefaultClientResources",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.prometheus.HistogramFlavor",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.PooledByteBufAllocator",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.socket.nio.NioDatagramChannel",
    "condition": {
      "typeReachable": "io.netty.channel.socket.nio.NioSocketChannel"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.channel.socket.nio.NioSocketChannel",
    "condition": {
      "typeReachable": "io.netty.channel.socket.nio.NioSocketChannel"
    },
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.handler.codec.MessageToByteEncoder",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "condition": {
      "typeReachable": "io.lettuce.core.RedisClient"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.io.File"
  },
  {
    "name": "java.io.Serializable"
  },
  {
    "name": "java.lang.Boolean"
  },
  {
    "name": "java.lang.Character"
  },
  {
    "name": "java.lang.Class"
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.Module",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Object"
  },
  {
    "name": "java.lang.String",
    "condition": {
      "typeReachable": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    }
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Throwable",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.net.InetAddress"
  },
  {
    "name": "java.net.URI"
  },
  {
    "name": "java.net.URL"
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.security.Provider"
  },
  {
    "name": "java.security.cert.X509Certificate"
  },
  {
    "name": "java.security.cert.X509Certificate[]"
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.util.ArrayList",
    "condition": {
      "typeReachable": "org.springframework.boot.SpringApplication"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.EventListener"
  },
  {
    "name": "java.util.EventObject"
  },
  {
    "name": "java.util.LinkedHashSet",
    "condition": {
      "typeReachable": "org.springframework.boot.SpringApplication"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "java.util.Properties",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.TimeZone"
  },
  {
    "name": "java.util.logging.LogManager",
    "condition": {
      "typeReachable": "org.springframework.boot.SpringApplication"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.annotation.PostConstruct",
    "allPublicMethods": true
  },
  {
    "name": "javax.annotation.Resource",
    "allPublicMethods": true
  },
  {
    "name": "javax.net.ssl.KeyManager",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.net.ssl.KeyManagerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.net.ssl.KeyManagerFactorySpi",
          "java.security.Provider",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "javax.net.ssl.KeyManager[]"
  },
  {
    "name": "javax.validation.Validator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "javax.validation.ValidatorFactory",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.bootstrap.GenericBootstrap",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.AssertFalse",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.AssertTrue",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.DecimalMax",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.DecimalMin",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Digits",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Email",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Future",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.FutureOrPresent",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Max",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Min",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Negative",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.NegativeOrZero",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.NotBlank",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.NotEmpty",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.NotNull",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Null",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Past",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.PastOrPresent",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Pattern",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Positive",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.PositiveOrZero",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.constraints.Size",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "kotlin.KotlinVersion",
    "condition": {
      "typeReachable": "kotlin.Unit"
    },
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "kotlin.KotlinVersion$Companion",
    "condition": {
      "typeReachable": "kotlin.Unit"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "kotlin.Metadata",
    "condition": {
      "typeReachable": "kotlin.reflect.full.KClasses"
    },
    "allDeclaredMethods": true
  },
  {
    "name": "kotlin.coroutines.Continuation",
    "condition": {
      "typeReachable": "kotlin.coroutines.Continuation"
    },
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "kotlin.reflect.full.KClasses",
    "condition": {
      "typeReachable": "kotlin.reflect.full.KClasses"
    }
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "condition": {
      "typeReachable": "kotlin.reflect.full.KClasses"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
    "condition": {
      "typeReachable": "kotlin.reflect.full.KClasses"
    },
    "allDeclaredFields": true
  },
  {
    "name": "org.HdrHistogram.ConcurrentHistogram",
    "condition": {
      "typeReachable": "org.HdrHistogram.Histogram"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.HdrHistogram.Histogram",
    "condition": {
      "typeReachable": "org.HdrHistogram.Histogram"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.message.ParameterizedMessageFactory",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.logging.log4j.message.ReusableMessageFactory",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.bson.UuidRepresentation",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.HibernateValidatorConfiguration",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.validator.constraintvalidation.HibernateConstraintValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.validator.constraintvalidators.RegexpURLValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.AbstractEmailValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.AssertFalseValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.AssertTrueValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.EmailValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotBlankValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NullValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.PatternValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArray",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfBoolean",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfChar",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfInt",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCollection",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForMap",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMaxValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMinValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.AbstractDecimalMaxValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.AbstractDecimalMinValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForBigDecimal",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForBigInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForInteger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForNumber",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArray",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfBoolean",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfByte",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfChar",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfDouble",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfFloat",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfInt",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfLong",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfShort",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCharSequence",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCollection",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForMap",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.AbstractEpochBasedTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.AbstractInstantBasedTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.AbstractJavaTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.AbstractFutureEpochBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.AbstractFutureInstantBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.AbstractFutureJavaTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForCalendar",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForHijrahDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForInstant",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForJapaneseDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForMinguoDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForMonthDay",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForOffsetDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForOffsetTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForThaiBuddhistDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForYear",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForYearMonth",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForZonedDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.AbstractFutureOrPresentEpochBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.AbstractFutureOrPresentInstantBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.AbstractFutureOrPresentJavaTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForCalendar",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForHijrahDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForInstant",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForJapaneseDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForMinguoDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForMonthDay",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForOffsetDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForOffsetTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForThaiBuddhistDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForYear",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForYearMonth",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForZonedDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.AbstractPastEpochBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.AbstractPastInstantBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.AbstractPastJavaTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForCalendar",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForHijrahDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForInstant",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForJapaneseDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForMinguoDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForMonthDay",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForOffsetDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForOffsetTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForThaiBuddhistDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForYear",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForYearMonth",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForZonedDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.AbstractPastOrPresentEpochBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.AbstractPastOrPresentInstantBasedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.AbstractPastOrPresentJavaTimeValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForCalendar",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForHijrahDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForInstant",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForJapaneseDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForMinguoDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForMonthDay",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForOffsetDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForOffsetTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForThaiBuddhistDate",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForYear",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForYearMonth",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForZonedDateTime",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.CodePointLengthValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.EANValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.EmailValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.ISBNValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.LengthValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.LuhnCheckValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.Mod10CheckValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.Mod11CheckValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.NormalizedValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.NotBlankValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.URLValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.UniqueElementsValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.br.CNPJValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.br.CPFValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.NIPValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.PESELValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.PolishNumberValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.pl.REGONValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.time.DurationMaxValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.hv.time.DurationMinValidator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.TraversableResolvers",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.metadata.descriptor.ConstraintDescriptorImpl",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.xml.config.ValidationBootstrapParameters",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.messageinterpolation.AbstractMessageInterpolator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.resourceloading.PlatformResourceBundleLocator",
    "condition": {
      "typeReachable": "org.hibernate.validator.internal.engine.ValidatorImpl"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.slf4j.Logger",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler",
    "condition": {
      "typeReachable": "org.slf4j.bridge.SLF4JBridgeHandler"
    }
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AdvisedSupport",
    "condition": {
      "typeReachable": "org.springframework.data.auditing.AuditingHandlerSupport"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "targetSource",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyFactoryBean",
    "condition": {
      "typeReachable": "org.springframework.data.auditing.AuditingHandlerSupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource",
    "condition": {
      "typeReachable": "org.springframework.data.auditing.AuditingHandlerSupport"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "targetBeanName",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "org.springframework.aop.target.LazyInitTargetSource",
    "condition": {
      "typeReachable": "org.springframework.data.auditing.AuditingHandlerSupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
    "condition": {
      "typeReachable": "org.springframework.data.auditing.AuditingHandlerSupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.RootBeanDefinition",
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "targetType"
      },
      {
        "name": "factoryMethodReturnType"
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "condition": {
      "typeReachable": "org.springframework.boot.SpringApplication"
    },
    "methods": [
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "livenessStateHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.availability.ApplicationAvailability"
        ]
      },
      {
        "name": "readinessStateHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.availability.ApplicationAvailability"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": []
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webEndpointReactiveHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "managementHealthEndpointWebFluxHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "gitInfoContributor",
        "parameterTypes": [
          "org.springframework.boot.info.GitProperties",
          "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties"
        ]
      },
      {
        "name": "envInfoContributor",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "buildInfoContributor",
        "parameterTypes": [
          "org.springframework.boot.info.BuildProperties"
        ]
      },
      {
        "name": "javaInfoContributor",
        "parameterTypes": []
      },
      {
        "name": "osInfoContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.mail.MailHealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mailHealthContributor",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": []
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": []
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "micrometerClock",
        "parameterTypes": []
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Graphql",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary[]"
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": []
      },
      {
        "name": "processorMetrics",
        "parameterTypes": []
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "repositoryTagsProvider",
        "parameterTypes": []
      },
      {
        "name": "metricsRepositoryMethodInvocationListener",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "prometheusConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
        ]
      },
      {
        "name": "prometheusMeterRegistry",
        "parameterTypes": [
          "io.micrometer.prometheus.PrometheusConfig",
          "io.prometheus.client.CollectorRegistry",
          "io.micrometer.core.instrument.Clock",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "collectorRegistry",
        "parameterTypes": []
      },
      {
        "name": "exemplarSampler",
        "parameterTypes": [
          "io.prometheus.client.exemplars.tracer.common.SpanContextSupplier"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "prometheusEndpoint",
        "parameterTypes": [
          "io.prometheus.client.CollectorRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mongoMetricsCommandListener",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider"
        ]
      },
      {
        "name": "mongoCommandTagsProvider",
        "parameterTypes": []
      },
      {
        "name": "mongoMetricsCommandListenerClientSettingsBuilderCustomizer",
        "parameterTypes": [
          "io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mongoMetricsConnectionPoolListener",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider"
        ]
      },
      {
        "name": "mongoConnectionPoolTagsProvider",
        "parameterTypes": []
      },
      {
        "name": "mongoMetricsConnectionPoolListenerClientSettingsBuilderCustomizer",
        "parameterTypes": [
          "io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "lettuceMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultWebClientExchangeTagsProvider",
        "parameterTypes": []
      },
      {
        "name": "metricsWebClientCustomizer",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTagsProvider",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "webFluxTagsProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webfluxMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider"
        ]
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.mongo.MongoReactiveHealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mongoHealthContributor",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.redis.RedisHealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "redisHealthContributor",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "redisHealthContributor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementChildContextConfiguration",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebChildContextFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextFactory",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableChildManagementContextConfiguration",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.ShutdownEndpoint",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.ApiVersion",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Selector",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Selector$Match",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.Link",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointResponse",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.mail.MailHealthIndicator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusPushGatewayManager$ShutdownOperation",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.mongo.MongoReactiveHealthIndicator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.redis.RedisHealthIndicator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.redis.RedisReactiveHealthIndicator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.trace.http.HttpTraceRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "[Ljava.lang.String;"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mongoMappingContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.mongo.MongoProperties",
          "org.springframework.data.mongodb.core.convert.MongoCustomConversions"
        ]
      },
      {
        "name": "mongoCustomConversions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveMongoDatabaseFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.mongo.MongoProperties",
          "com.mongodb.reactivestreams.client.MongoClient"
        ]
      },
      {
        "name": "reactiveMongoTemplate",
        "parameterTypes": [
          "org.springframework.data.mongodb.ReactiveMongoDatabaseFactory",
          "org.springframework.data.mongodb.core.convert.MongoConverter"
        ]
      },
      {
        "name": "mappingMongoConverter",
        "parameterTypes": [
          "org.springframework.data.mongodb.core.mapping.MongoMappingContext",
          "org.springframework.data.mongodb.core.convert.MongoCustomConversions"
        ]
      },
      {
        "name": "dataBufferFactory",
        "parameterTypes": []
      },
      {
        "name": "reactiveGridFsTemplate",
        "parameterTypes": [
          "org.springframework.data.mongodb.ReactiveMongoDatabaseFactory",
          "org.springframework.data.mongodb.core.convert.MappingMongoConverter",
          "org.springframework.core.io.buffer.DataBufferFactory",
          "org.springframework.boot.autoconfigure.mongo.MongoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "lettuceClientResources",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "redisConnectionFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "io.lettuce.core.resource.ClientResources"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "redisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.RedisConnectionFactory"
        ]
      },
      {
        "name": "stringRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.RedisConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "reactiveStringRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.domain.EntityScan",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.domain.EntityScanPackages",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "[Ljava.lang.String;"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      },
      {
        "name": "gitProperties",
        "parameterTypes": []
      },
      {
        "name": "buildProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mailSender",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.mail.MailProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveStreamsMongoClient",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "com.mongodb.MongoClientSettings"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$MongoClientSettingsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "mongoClientSettings",
        "parameterTypes": []
      },
      {
        "name": "mongoPropertiesCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.mongo.MongoProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyDriverCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalzyer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskScheduler",
        "parameterTypes": [
          "org.springframework.boot.task.TaskSchedulerBuilder"
        ]
      },
      {
        "name": "scheduledBeanLazyInitializationExcludeFilter",
        "parameterTypes": []
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionalOperator",
        "parameterTypes": [
          "org.springframework.transaction.ReactiveTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "javax.validation.Validator",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultPartHttpMessageReaderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "tomcatReactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "forwardedHeaderTransformer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorServerResourceFactory",
        "parameterTypes": []
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Cookie",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$SameSite",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Session",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      },
      {
        "name": "webSessionIdResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clientConnectorCustomizer",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ClientHttpConnector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$HttpClient5",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webClientBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudPlatform",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation[]"
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem",
    "condition": {
      "typeReachable": "org.springframework.boot.SpringApplication"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "condition": {
      "typeReachable": "ch.qos.logback.classic.Level"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.DatabaseInitializationMode",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "methods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Cookie$SameSite",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Shutdown",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ClientAuth",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$SessionTrackingMode",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "configurationPropertiesBeans",
        "parameterTypes": []
      },
      {
        "name": "configurationPropertiesRebinder",
        "parameterTypes": [
          "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "environmentManager",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "pauseEndpoint",
        "parameterTypes": [
          "org.springframework.cloud.context.restart.RestartEndpoint"
        ]
      },
      {
        "name": "resumeEndpoint",
        "parameterTypes": [
          "org.springframework.cloud.context.restart.RestartEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "refreshScopeHealthIndicator",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "refreshEndpoint",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "restartEndpointWithoutIntegration",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
    "fields": [
      {
        "name": "hasFeatures",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "featuresEndpoint",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "discoveryClientHealthIndicator",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
        ]
      },
      {
        "name": "discoveryCompositeHealthContributor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "commonsFeatures",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.DefaultServiceInstance",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveDiscoveryClients",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "reactiveCommonsFeatures",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.actuator.FeaturesEndpoint",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.actuator.FeaturesEndpoint$Feature",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.actuator.FeaturesEndpoint$Features",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "compositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveCompositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "setInet",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils"
        ]
      },
      {
        "name": "simpleDiscoveryProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simpleDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
    "fields": [
      {
        "name": "server",
        "allowWrite": true
      },
      {
        "name": "serviceId",
        "allowWrite": true
      },
      {
        "name": "inet",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "simpleReactiveDiscoveryProperties",
        "parameterTypes": []
      },
      {
        "name": "simpleReactiveDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "simpleReactiveDiscoveryClientHealthIndicator",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
          "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "loadBalancerClientsDefaultsMappingsProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
    "fields": [
      {
        "name": "autoServiceRegistration",
        "allowWrite": true
      },
      {
        "name": "properties",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultsBindHandlerAdvisor",
        "parameterTypes": [
          "[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.httpclient.HttpClientConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "fields": [
      {
        "name": "timeoutSeconds",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "inetUtilsProperties",
        "parameterTypes": []
      },
      {
        "name": "inetUtils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtilsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentChangeEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "stringToZonedDateTimeConverter",
        "parameterTypes": []
      },
      {
        "name": "routeLocatorBuilder",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      },
      {
        "name": "propertiesRouteDefinitionLocator",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayProperties"
        ]
      },
      {
        "name": "inMemoryRouteDefinitionRepository",
        "parameterTypes": []
      },
      {
        "name": "routeDefinitionLocator",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "gatewayConfigurationService",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "routeDefinitionRouteLocator",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayProperties",
          "java.util.List",
          "java.util.List",
          "org.springframework.cloud.gateway.route.RouteDefinitionLocator",
          "org.springframework.cloud.gateway.support.ConfigurationService"
        ]
      },
      {
        "name": "cachedCompositeRouteLocator",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "routeRefreshListener",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "filteringWebHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "globalCorsProperties",
        "parameterTypes": []
      },
      {
        "name": "routePredicateHandlerMapping",
        "parameterTypes": [
          "org.springframework.cloud.gateway.handler.FilteringWebHandler",
          "org.springframework.cloud.gateway.route.RouteLocator",
          "org.springframework.cloud.gateway.config.GlobalCorsProperties",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "gatewayProperties",
        "parameterTypes": []
      },
      {
        "name": "secureHeadersProperties",
        "parameterTypes": []
      },
      {
        "name": "forwardedHeadersFilter",
        "parameterTypes": []
      },
      {
        "name": "removeHopByHopHeadersFilter",
        "parameterTypes": []
      },
      {
        "name": "xForwardedHeadersFilter",
        "parameterTypes": []
      },
      {
        "name": "gRPCRequestHeadersFilter",
        "parameterTypes": []
      },
      {
        "name": "gRPCResponseHeadersFilter",
        "parameterTypes": []
      },
      {
        "name": "transferEncodingNormalizationHeadersFilter",
        "parameterTypes": []
      },
      {
        "name": "adaptCachedBodyGlobalFilter",
        "parameterTypes": []
      },
      {
        "name": "removeCachedBodyFilter",
        "parameterTypes": []
      },
      {
        "name": "routeToRequestUrlFilter",
        "parameterTypes": []
      },
      {
        "name": "forwardRoutingFilter",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "forwardPathFilter",
        "parameterTypes": []
      },
      {
        "name": "webSocketService",
        "parameterTypes": [
          "org.springframework.web.reactive.socket.server.RequestUpgradeStrategy"
        ]
      },
      {
        "name": "websocketRoutingFilter",
        "parameterTypes": [
          "org.springframework.web.reactive.socket.client.WebSocketClient",
          "org.springframework.web.reactive.socket.server.WebSocketService",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "weightCalculatorWebFilter",
        "parameterTypes": [
          "org.springframework.cloud.gateway.support.ConfigurationService",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "afterRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "beforeRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "betweenRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "cookieRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "headerRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "hostRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "methodRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "pathRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "queryRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "readBodyPredicateFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "remoteAddrRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "xForwardedRemoteAddrRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "weightRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "cloudFoundryRouteServiceRoutePredicateFactory",
        "parameterTypes": []
      },
      {
        "name": "addRequestHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "mapRequestHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "addRequestParameterGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "addResponseHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "modifyRequestBodyGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "dedupeResponseHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "modifyResponseBodyGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer",
          "java.util.Set",
          "java.util.Set"
        ]
      },
      {
        "name": "cacheRequestBodyGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "prefixPathGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "preserveHostHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "redirectToGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "removeRequestHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "removeRequestParameterGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "removeResponseHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "principalNameKeyResolver",
        "parameterTypes": []
      },
      {
        "name": "requestRateLimiterGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.cloud.gateway.filter.ratelimit.RateLimiter",
          "org.springframework.cloud.gateway.filter.ratelimit.KeyResolver"
        ]
      },
      {
        "name": "rewritePathGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "retryGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "setPathGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "secureHeadersGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties"
        ]
      },
      {
        "name": "setRequestHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "setRequestHostHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "setResponseHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "rewriteResponseHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "rewriteLocationResponseHeaderGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "setStatusGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "saveSessionGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "stripPrefixGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "requestHeaderToRequestUriGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "requestSizeGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "requestHeaderSizeGatewayFilterFactory",
        "parameterTypes": []
      },
      {
        "name": "gzipMessageBodyResolver",
        "parameterTypes": []
      },
      {
        "name": "jsonToGRPCFilterFactory",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GrpcSslConfigurer",
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "grpcSslConfigurer",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayAutoConfiguration$GatewayActuatorConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "gatewayControllerEndpoint",
        "parameterTypes": [
          "java.util.List",
          "java.util.List",
          "java.util.List",
          "org.springframework.cloud.gateway.route.RouteDefinitionWriter",
          "org.springframework.cloud.gateway.route.RouteLocator",
          "org.springframework.cloud.gateway.route.RouteDefinitionLocator"
        ]
      },
      {
        "name": "gatewayLegacyControllerEndpoint",
        "parameterTypes": [
          "org.springframework.cloud.gateway.route.RouteDefinitionLocator",
          "java.util.List",
          "java.util.List",
          "java.util.List",
          "org.springframework.cloud.gateway.route.RouteDefinitionWriter",
          "org.springframework.cloud.gateway.route.RouteLocator"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "httpClientSslConfigurer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      },
      {
        "name": "gatewayHttpClientFactory",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "java.util.List",
          "org.springframework.cloud.gateway.config.HttpClientSslConfigurer"
        ]
      },
      {
        "name": "httpClientProperties",
        "parameterTypes": []
      },
      {
        "name": "routingFilter",
        "parameterTypes": [
          "reactor.netty.http.client.HttpClient",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      },
      {
        "name": "nettyWriteResponseFilter",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayProperties"
        ]
      },
      {
        "name": "reactorNettyWebSocketClient",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties",
          "reactor.netty.http.client.HttpClient"
        ]
      },
      {
        "name": "reactorNettyRequestUpgradeStrategy",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      },
      {
        "name": "nettyServerWiretapCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayMetricsAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "gatewayHttpTagsProvider",
        "parameterTypes": []
      },
      {
        "name": "gatewayRouteTagsProvider",
        "parameterTypes": []
      },
      {
        "name": "propertiesTagsProvider",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayMetricsProperties"
        ]
      },
      {
        "name": "gatewayMetricFilter",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "java.util.List",
          "org.springframework.cloud.gateway.config.GatewayMetricsProperties"
        ]
      },
      {
        "name": "routeDefinitionMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry",
          "org.springframework.cloud.gateway.route.RouteDefinitionLocator",
          "org.springframework.cloud.gateway.config.GatewayMetricsProperties"
        ]
      },
      {
        "name": "gatewayPathTagsProvider",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayMetricsProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayMetricsProperties$$SpringProxy$77df9ffc",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "noLoadBalancerClientFilter",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayProperties$$SpringProxy$3386daa5",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayRedisAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "redisRequestRateLimiterScript",
        "parameterTypes": []
      },
      {
        "name": "redisRateLimiter",
        "parameterTypes": [
          "org.springframework.data.redis.core.ReactiveStringRedisTemplate",
          "org.springframework.data.redis.core.script.RedisScript",
          "org.springframework.cloud.gateway.support.ConfigurationService"
        ]
      },
      {
        "name": "reactiveRedisRouteDefinitionTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
        ]
      },
      {
        "name": "redisRouteDefinitionRepository",
        "parameterTypes": [
          "org.springframework.data.redis.core.ReactiveRedisTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GlobalCorsProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredClasses": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$$SpringProxy$44cd2030",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool$PoolType",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Websocket",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "discoveryLocatorProperties",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration$ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "discoveryClientRouteDefinitionLocator",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
          "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.FilterDefinition",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.GlobalFilter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.GatewayFilterFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.gateway.filter.ratelimit.RateLimiter",
          "org.springframework.cloud.gateway.filter.ratelimit.KeyResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.ratelimit.KeyResolver",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.ratelimit.RateLimiter",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter$Config",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.PredicateDefinition",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.route.RouteDefinition",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.support.AbstractConfigurable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.Configurable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.MvcFoundOnClasspathFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.ShortcutConfigurable",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEvent",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.EnableAspectJAutoProxy",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    }
  },
  {
    "name": "org.springframework.core.io.Resource",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.auditing.AuditingHandlerSupport",
    "condition": {
      "typeReachable": "org.springframework.data.auditing.AuditingHandlerSupport"
    },
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "dateTimeForNow",
        "allowWrite": true
      },
      {
        "name": "dateTimeProvider",
        "allowWrite": true
      },
      {
        "name": "modifyOnCreation",
        "allowWrite": true
      }
    ],
    "methods": [
      {
        "name": "setDateTimeForNow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModifyOnCreation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDateTimeProvider",
        "parameterTypes": [
          "org.springframework.data.auditing.DateTimeProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.ReactiveAuditingHandler",
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "auditorAware",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.ReactiveIsNewAwareAuditingHandler",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.convert.ReadingConverter",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.WritingConverter",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.annotation.KeySpace",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.AbstractKeyValueAdapter",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueAdapter",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueOperations",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueTemplate",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.KeyValueRepository",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.config.QueryCreatorType",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.query.KeyValuePartTreeQuery",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.SimpleKeyValueRepository",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.config.EnableReactiveMongoAuditing",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.config.PersistentEntitiesFactoryBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.AfterConvertCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.MongoDatabaseFactorySupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.AfterSaveCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.MongoDatabaseFactorySupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.BeforeConvertCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.MongoDatabaseFactorySupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.BeforeSaveCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.MongoDatabaseFactorySupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.ReactiveAfterConvertCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.ReactiveAfterSaveCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.ReactiveAuditingEntityCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.ReactiveBeforeConvertCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.core.mapping.event.ReactiveBeforeSaveCallback",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.repository.config.EnableReactiveMongoRepositories",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoryConfigurationExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.mongodb.repository.support.MongoRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.mongodb.repository.support.SimpleMongoRepository",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.MongoDatabaseFactorySupport"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.mongodb.repository.support.SimpleReactiveMongoRepository",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.DefaultedRedisClusterConnection",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.DefaultedRedisConnection",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterGeoCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterHashCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterHyperLogLogCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterKeyCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterListCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterScriptingCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterServerCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterSetCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterStreamCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterStringCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterZSetCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveGeoCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveHashCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveHyperLogLogCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveKeyCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveListCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactivePubSubCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveRedisConnection",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveScriptingCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveServerCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveSetCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveStreamCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveStringCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveZSetCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisClusterCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnection",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisGeoCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisHashCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisHyperLogLogCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisKeyCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisListCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisPubSubCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisScriptingCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisServerCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisSetCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisStreamCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisStringCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisTxCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisZSetCommands",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.StringRedisConnection",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveRedisOperations",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveRedisTemplate",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveStringRedisTemplate",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.RedisKeyValueAdapter",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisOperations",
          "org.springframework.data.redis.core.convert.RedisConverter"
        ]
      },
      {
        "name": "setEnableKeyspaceEvents",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents"
        ]
      },
      {
        "name": "setKeyspaceNotificationsConfigParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShadowCopy",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.RedisKeyValueTemplate",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter",
          "org.springframework.data.redis.core.mapping.RedisMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.RedisOperations",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.RedisTemplate",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.core.StringRedisTemplate",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.KeyspaceConfiguration",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.MappingConfiguration",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.MappingRedisConverter",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.mapping.RedisMappingContext"
        ]
      },
      {
        "name": "setReferenceResolver",
        "parameterTypes": [
          "org.springframework.data.redis.core.convert.ReferenceResolver"
        ]
      },
      {
        "name": "setCustomConversions",
        "parameterTypes": [
          "org.springframework.data.convert.CustomConversions"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.RedisConverter",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.RedisCustomConversions",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.ReferenceResolver",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.ReferenceResolverImpl",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexConfiguration",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.core.mapping.RedisMappingContext",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.convert.MappingConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.repository.query.RedisQueryCreator",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.repository.support.RedisRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean",
    "condition": {
      "typeReachable": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "condition": {
      "typeReachable": "org.springframework.data.mapping.context.MappingContext"
    },
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.MediaType",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.ResponseEntity",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "condition": {
      "typeReachable": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper"
    },
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "org.springframework.http.client.SimpleClientHttpRequestFactory"
    },
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jmx.export.annotation.ManagedResource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.nativex.ClassNotFoundExceptionNativeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.nativex.GeneratedClassNotFoundExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.nativex.NoSuchMethodExceptionNativeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.nativex.hint.NativeHint",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.EnableScheduling",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.Schedules",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "scheduledAnnotationProcessor",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.stereotype.Component",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "condition": {
      "typeReachable": "org.springframework.transaction.TransactionDefinition"
    },
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "methods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.util.unit.DataSize",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.annotation.Validated",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter$ViolationFieldError",
    "condition": {
      "typeReachable": "org.springframework.validation.beanvalidation.SpringValidatorAdapter"
    },
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.InitBinder",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ModelAttribute",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PatchMapping",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PutMapping",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestBody",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestHeader",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestPart",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseStatus",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.EnableWebFlux",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "methods": [
      {
        "name": "webHandler",
        "parameterTypes": []
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": []
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": []
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": []
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
    "condition": {
      "typeReachable": "reactor.netty.http.server.HttpServerResponse"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.server.ServerWebExchange",
    "allPublicFields": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.WebFilter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.publisher.Flux",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    }
  },
  {
    "name": "reactor.core.publisher.Mono",
    "condition": {
      "typeReachable": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory"
    }
  },
  {
    "name": "reactor.core.publisher.Traces$ExceptionCallSiteSupplierFactory",
    "condition": {
      "typeReachable": "reactor.core.publisher.Traces"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "reactor.core.publisher.Traces$SharedSecretsCallSiteSupplierFactory",
    "condition": {
      "typeReachable": "reactor.core.publisher.Traces"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "reactor.core.publisher.Traces$StackWalkerCallSiteSupplierFactory",
    "condition": {
      "typeReachable": "reactor.core.publisher.Traces"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "reactor.netty.DisposableServer",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.netty.http.server.HttpServerResponse",
    "condition": {
      "typeReachable": "reactor.netty.http.server.HttpServerResponse"
    }
  },
  {
    "name": "reactor.netty.tcp.SslProvider$DefaultConfigurationType",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ProxyProvider$Proxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  }
]
